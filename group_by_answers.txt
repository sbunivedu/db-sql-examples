-- Solutions to SQL Exercise: GROUP BY and HAVING Clauses

-- Question 1: Find the average GPA for each major, but only show majors with an average GPA above 3.5.
SELECT Major, AVG(GPA) AS AverageGPA
FROM Students
GROUP BY Major
HAVING AVG(GPA) > 3.5;

-- Expected Output:
-- Major            | AverageGPA
-- -----------------|-----------
-- Computer Science | 3.85
-- Mathematics      | 3.55

-- Question 2: List the courses with more than 2 students enrolled, along with the number of students in each course.
SELECT c.CourseID, c.CourseName, COUNT(e.StudentID) AS StudentCount
FROM Courses c
JOIN Enrollments e ON c.CourseID = e.CourseID
GROUP BY c.CourseID, c.CourseName
HAVING COUNT(e.StudentID) > 2;

-- Expected Output:
-- CourseID | CourseName                  | StudentCount
-- ---------|-----------------------------|--------------
-- 101      | Introduction to Programming | 3
-- 102      | Data Structures             | 3

-- Question 3: Show the students who have taken courses in more than one department, along with the number of departments they've studied in.
SELECT s.StudentID, s.Name, COUNT(DISTINCT c.Department) AS DepartmentCount
FROM Students s
JOIN Enrollments e ON s.StudentID = e.StudentID
JOIN Courses c ON e.CourseID = c.CourseID
GROUP BY s.StudentID, s.Name
HAVING COUNT(DISTINCT c.Department) > 1;

-- Expected Output:
-- StudentID | Name          | DepartmentCount
-- ----------|---------------|------------------
-- 1         | Alice Johnson | 2
-- 2         | Bob Smith     | 2
-- 4         | Diana Ross    | 2
-- 5         | Edward Lee    | 2

-- Question 4: Find the departments where the average course credits are greater than 3.5.
SELECT Department, AVG(Credits) AS AverageCredits
FROM Courses
GROUP BY Department
HAVING AVG(Credits) > 3.5;

-- Expected Output:
-- Department       | AverageCredits
-- -----------------|-----------------
-- Computer Science | 3.5
-- Mathematics      | 3.5
-- Physics          | 4.0

-- Question 5: List the students who have received all A grades, along with the number of courses they've taken (minimum 2 courses).
SELECT s.StudentID, s.Name, COUNT(e.CourseID) AS CourseCount
FROM Students s
JOIN Enrollments e ON s.StudentID = e.StudentID
GROUP BY s.StudentID, s.Name
HAVING COUNT(e.CourseID) >= 2 AND MIN(e.Grade) = 'A' AND MAX(e.Grade) = 'A';

-- Expected Output:
-- StudentID | Name       | CourseCount
-- ----------|------------|-------------
-- 4         | Diana Ross | 2

-- Note: This query assumes 'A' is the highest grade. If there are A+ grades, you might need to adjust the condition.